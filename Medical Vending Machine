from tkinter import *

window = Tk(screenName=None, baseName=None, className='Tk', useTk=True)
# window.wm_attributes("-transparentcolor", '#eeefff')
window.bind('<Escape>', lambda event: window.destroy())
window.title('Medical Vending Machine')
window.geometry('1280x720')
window.minsize(960, 540)
window.attributes('-fullscreen', True)

selected = []
disease_dict = {'Cold': [[], 'Acetaminophen', 70], 'Fever': [[], 'Paracetamol', 10],
                'Sore throat': [[], 'Ibuprofen', 20], 'Headache': [[], 'Motrin IB', 60],
                'Gastric': [[], 'Esomeprazole', 80], 'Conjuctivitis': [[], 'Zymar', 290]}


class Gui:
    def init(self):
        self.paid = 0

    def logo_page(self):
        theme = '#addbff'
        for item in window.winfo_children():
            item.destroy()

        selected.clear()
        self.container = Frame(window, bg='grey')
        self.background_label = Label(self.container, bg=theme)
        self.container.pack(fill=BOTH, expand=True)
        self.container.grid_columnconfigure(1, weight=1)
        self.container.grid_rowconfigure(2, weight=1)

        self.background_label = Label(self.container, bg=theme)
        self.background_label.pack(fill=BOTH, expand=True, padx=20, pady=20)
        self.background_label.grid_columnconfigure(list(range(1, 3)), weight=1)
        self.background_label.grid_rowconfigure(3, weight=1)

        label = Label(self.background_label, bg=theme)
        label.pack(fill=BOTH, expand=True)
        label.grid_columnconfigure(list(range(1, 3)), weight=1)
        # label.grid_rowconfigure(3, weight=1)

        def proceed():
            label.destroy()
            self.home_page()

        title_label = Label(label, text=' Medical Vending Machine ',
                            font=('Ariel', 40, 'bold'), bg=theme, fg='dark blue')
        title_label.grid(row=1, column=1, columnspan=2, sticky='n', padx=(0, 0), pady=(150, 0))

        continue_button = Button(label, text='Buy Medicines', fg='dark blue',
                                 font=('Ariel', 30), bg=theme, command=proceed)
        continue_button.grid(row=2, column=1, columnspan=2, pady=150)

    def home_page(self):
        theme = 'white'
        for item in self.background_label.winfo_children():
            item.destroy()

        title_label = Label(self.background_label, text=' Welcome, What are you affected by? ',
                            font=('Ariel', 30), bg=theme)
        title_label.grid(row=1, column=1, columnspan=2, sticky='w', padx=(30, 0), pady=(20, 20))

        frame1 = Frame(self.background_label, bg=theme)
        frame1.grid(row=2, column=1, rowspan=1, sticky='nsew', ipadx=window.winfo_screenwidth()//4)
        frame1.grid_propagate(False)
        frame1.grid_rowconfigure(list(range(1, 4)), weight=1)
        frame1.grid_columnconfigure(1, weight=1)
        frame2 = Frame(self.background_label, bg=theme)
        frame2.grid(row=2, column=2, rowspan=1, sticky='nsew')
        frame2.grid_rowconfigure(list(range(1, 4)), weight=1)
        frame2.grid_columnconfigure(1, weight=1)

        back_button = Button(self.background_label, text='Back',
                             font=('Ariel', 30), bg=theme, command=self.logo_page)
        back_button.grid(row=4, column=1, sticky='w', padx=(40, 0), pady=(0, 20))

        continue_button = Button(self.background_label, text='Continue',
                                 font=('Ariel', 30), bg=theme, command=self.cart)
        continue_button.grid(row=4, column=2, sticky='e', padx=(0, 40), pady=(0, 20))

        button_list = []
        row1 = 1
        frame = frame1
        for i in disease_dict:
            def action(b):
                d = b.cget('text')
                if d not in selected:
                    selected.append(d)
                    b.config(bg='light blue')
                    disease_dict[d][0] = [1]
                else:
                    selected.remove(d)
                    b.config(bg=theme)
                    disease_dict[d][0] = []
            button = Button(frame, text=i, font=('Ariel', 30), width=13, bg='white')
            button.config(command=lambda b=button: action(b))
            if i in selected:
                button.config(bg='light blue')
            pady = 80 if row1 != 3 else 40
            button.grid(row=row1, column=1, pady=(80, pady), padx=(100, 0), sticky='w')
            button_list.append(button)
            row1 += 1

            if row1 == 4:
                row1 = 1
                frame = frame2

    def cart(self):
        self.total = 0
        if len(selected) == 0:
            self.home_page()
            return
        theme = 'white'
        for item in self.background_label.winfo_children():
            item.destroy()

        title_label = Label(self.background_label, text=' Cart ', font=('Ariel', 30, 'bold'), bg=theme)
        title_label.grid(row=1, column=1, columnspan=2, sticky='wn', padx=(30, 0), pady=(20, 20))

        frame1 = Frame(self.background_label)
        frame1.grid(row=2, column=1, rowspan=2, columnspan=2, sticky='nsew')
        frame1.grid_propagate(False)
        frame1.grid_columnconfigure(list(range(1, 6)), weight=1)
        frame1.grid_rowconfigure(list(range(1, len(selected) + 3)), weight=1)

        head_label = Label(frame1, text='Sno.', font=('Ariel', 30))
        head_label.grid(row=1, column=1, pady=(20, 0), sticky='n')

        head_label = Label(frame1, text='Disease', font=('Ariel', 30))
        head_label.grid(row=1, column=2, pady=(20, 0), sticky='n')

        head_label = Label(frame1, text='Tablet', font=('Ariel', 30))
        head_label.grid(row=1, column=3, pady=(20, 0), sticky='n')

        head1_label = Label(frame1, text='Quantity', font=('Ariel', 30))
        head1_label.grid(row=1, column=4, pady=(20, 0), sticky='n')

        head2_label = Label(frame1, text='Price', font=('Ariel', 30))
        head2_label.grid(row=1, column=5, pady=(20, 0), sticky='n')

        quantity_dict = {}
        price_dict = {}
        for i in selected:
            sno_label = Label(frame1, text=selected.index(i) + 1, font=('Ariel', 30))
            sno_label.grid(row=selected.index(i) + 2, column=1)

            disease_label = Label(frame1, text=i, font=('Ariel', 30))
            disease_label.grid(row=selected.index(i) + 2, column=2)

            medicine_label = Label(frame1, text=disease_dict[i][1], font=('Ariel', 30))
            medicine_label.grid(row=selected.index(i) + 2, column=3)

            def update_price(pl, quantity):
                price = '₹' + str(int(quantity.get()) * disease_dict[i][2])
                pl.config(text=price)
                disease_dict[i][0] = [int(quantity.get())]
                update_total()

            def update_total():
                self.total = 0
                for d in selected:
                    self.total += disease_dict[d][2] * int(quantity_dict[d].get())
                total_label.config(text=f"Total: ₹{self.total}")

            price_dict[i] = Label(frame1, text=f"₹{disease_dict[i][2]}", font=('Ariel', 30))
            price_dict[i].grid(row=selected.index(i) + 2, column=5)

            quantity_dict[i] = Spinbox(frame1, from_=1, to=10, font=('Ariel', 30),
                                       width=2, command=lambda d=i: update_price(price_dict[d], quantity_dict[d]))
            quantity_dict[i].grid(row=selected.index(i) + 2, column=4)

            total_label = Label(frame1, font=('Ariel', 30))
            total_label.grid(row=len(selected) + 2, column=3)
            if selected.index(i) + 1 == len(selected):
                update_total()

        back_button = Button(frame1, text='Back',
                             font=('Ariel', 30), bg=theme, command=self.home_page)
        back_button.grid(row=len(selected) + 2, column=1, sticky='w', padx=(40, 0), pady=(0, 0))
        continue_button = Button(frame1, text='Continue',
                                 font=('Ariel', 30), bg=theme, command=self.bill_page)
        continue_button.grid(row=len(selected) + 2, column=5, sticky='e', padx=(0, 40), pady=(0, 0))

    def bill_page(self):
        theme = 'white'
        for item in self.background_label.winfo_children():
            item.destroy()

        title_label = Label(self.background_label, text=' Bill ', font=('Ariel', 30, 'bold'), bg=theme)
        title_label.grid(row=1, column=1, columnspan=2, sticky='wn', padx=(30, 0), pady=(20, 20))

        frame1 = Frame(self.background_label)
        frame1.grid(row=2, column=1, rowspan=2, columnspan=2, sticky='nsew')
        frame1.grid_propagate(False)
        frame1.grid_columnconfigure(list(range(1, 4)), weight=1)
        frame1.grid_rowconfigure(list(range(1, len(selected) + 3)), weight=1)

        for i in selected:
            sno_label = Label(frame1, text=f"{selected.index(i) + 1}.", font=('Ariel', 30))
            sno_label.grid(row=selected.index(i) + 2, column=1)

            medicine_label = Label(frame1, font=('Ariel', 30),
                                   text=f"{disease_dict[i][0]} x {disease_dict[i][1]} "
                                   f"-₹{disease_dict[i][2] * disease_dict[i][0][0]}")
            medicine_label.grid(row=selected.index(i) + 2, column=2)

            total_label = Label(frame1, font=('Ariel', 30), text=f"Total: ₹{self.total}")
            total_label.grid(row=len(selected) + 2, column=2)

            back_button = Button(frame1, text='Back',
                                 font=('Ariel', 30), bg=theme, command=self.cart)
            back_button.grid(row=len(selected) + 2, column=1, sticky='w', padx=(40, 0), pady=(0, 0))

            def pay(payment, mode=0):
                if payment == 1:
                    self.paid = 1
                    self.pay_button.config(bg='light blue')
                    if mode == 1:
                        self.final_page()

            continue_button = Button(frame1, text='Continue',
                                     font=('Ariel', 30), bg=theme, command=lambda: pay(self.paid, 1))
            continue_button.grid(row=len(selected) + 2, column=3, sticky='e', padx=(0, 40), pady=(0, 0))

            self.qr_img = PhotoImage(file='qr-code.png')
            background_label = Label(frame1, image=self.qr_img, bd=0)
            background_label.place(x=window.winfo_screenwidth() - 400, y=200)

            self.pay_button = Button(frame1, text='payment', font=('Ariel', 30), bg='light grey',
                                     command=lambda: pay(1, 0))
            self.pay_button.place(x=window.winfo_screenwidth() - 350, y=520)

    def final_page(self):
        # theme = 'white'
        for item in self.background_label.winfo_children():
            item.destroy()
        self.background_label.grid_columnconfigure(1, weight=1)

        continue_button = Label(self.background_label, text='Thank you for using the\nmedical vending machine',
                                font=('Ariel', 50), bg='#addbff', fg='black')
        continue_button.grid(row=1, column=1, pady=100)
        continue_button.after(4000, self.logo_page)

        self.timer = Label(self.background_label)
        self.timer.after(6000, self.logo_page)


mygui = Gui()
mygui.logo_page()
window.mainloop()
